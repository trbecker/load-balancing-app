// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intent.proto

#include "intent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace intent {
class IntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntentRequest>
      _instance;
} _IntentRequest_default_instance_;
class IntentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntentResponse>
      _instance;
} _IntentResponse_default_instance_;
}  // namespace intent
namespace protobuf_intent_2eproto {
static void InitDefaultsIntentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intent::_IntentRequest_default_instance_;
    new (ptr) ::intent::IntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intent::IntentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntentRequest}, {}};

static void InitDefaultsIntentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intent::_IntentResponse_default_instance_;
    new (ptr) ::intent::IntentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intent::IntentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntentResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IntentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntentResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentRequest, limitueadmitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentRequest, limitueadmissionpersecond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intent::IntentResponse, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::intent::IntentRequest)},
  { 8, -1, sizeof(::intent::IntentResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::intent::_IntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::intent::_IntentResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "intent.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014intent.proto\022\006intent\"W\n\rIntentRequest\022"
      "\n\n\002id\030\001 \001(\003\022\027\n\017limitUEAdmitted\030\002 \001(\003\022!\n\031"
      "limitUEAdmissionPerSecond\030\003 \001(\003\",\n\016Inten"
      "tResponse\022\n\n\002id\030\001 \001(\003\022\016\n\006status\030\002 \001(\0102F\n"
      "\006Intent\022<\n\tsetIntent\022\025.intent.IntentRequ"
      "est\032\026.intent.IntentResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "intent.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_intent_2eproto
namespace intent {

// ===================================================================

void IntentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntentRequest::kIdFieldNumber;
const int IntentRequest::kLimitUEAdmittedFieldNumber;
const int IntentRequest::kLimitUEAdmissionPerSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntentRequest::IntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intent_2eproto::scc_info_IntentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intent.IntentRequest)
}
IntentRequest::IntentRequest(const IntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limitueadmissionpersecond_) -
    reinterpret_cast<char*>(&id_)) + sizeof(limitueadmissionpersecond_));
  // @@protoc_insertion_point(copy_constructor:intent.IntentRequest)
}

void IntentRequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limitueadmissionpersecond_) -
      reinterpret_cast<char*>(&id_)) + sizeof(limitueadmissionpersecond_));
}

IntentRequest::~IntentRequest() {
  // @@protoc_insertion_point(destructor:intent.IntentRequest)
  SharedDtor();
}

void IntentRequest::SharedDtor() {
}

void IntentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntentRequest::descriptor() {
  ::protobuf_intent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntentRequest& IntentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intent_2eproto::scc_info_IntentRequest.base);
  return *internal_default_instance();
}


void IntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:intent.IntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limitueadmissionpersecond_) -
      reinterpret_cast<char*>(&id_)) + sizeof(limitueadmissionpersecond_));
  _internal_metadata_.Clear();
}

bool IntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intent.IntentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limitUEAdmitted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limitueadmitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limitUEAdmissionPerSecond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limitueadmissionpersecond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intent.IntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intent.IntentRequest)
  return false;
#undef DO_
}

void IntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intent.IntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // int64 limitUEAdmitted = 2;
  if (this->limitueadmitted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->limitueadmitted(), output);
  }

  // int64 limitUEAdmissionPerSecond = 3;
  if (this->limitueadmissionpersecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limitueadmissionpersecond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intent.IntentRequest)
}

::google::protobuf::uint8* IntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intent.IntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // int64 limitUEAdmitted = 2;
  if (this->limitueadmitted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->limitueadmitted(), target);
  }

  // int64 limitUEAdmissionPerSecond = 3;
  if (this->limitueadmissionpersecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limitueadmissionpersecond(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intent.IntentRequest)
  return target;
}

size_t IntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intent.IntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 limitUEAdmitted = 2;
  if (this->limitueadmitted() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limitueadmitted());
  }

  // int64 limitUEAdmissionPerSecond = 3;
  if (this->limitueadmissionpersecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limitueadmissionpersecond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intent.IntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intent.IntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intent.IntentRequest)
    MergeFrom(*source);
  }
}

void IntentRequest::MergeFrom(const IntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intent.IntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.limitueadmitted() != 0) {
    set_limitueadmitted(from.limitueadmitted());
  }
  if (from.limitueadmissionpersecond() != 0) {
    set_limitueadmissionpersecond(from.limitueadmissionpersecond());
  }
}

void IntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intent.IntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentRequest::CopyFrom(const IntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intent.IntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentRequest::IsInitialized() const {
  return true;
}

void IntentRequest::Swap(IntentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntentRequest::InternalSwap(IntentRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(limitueadmitted_, other->limitueadmitted_);
  swap(limitueadmissionpersecond_, other->limitueadmissionpersecond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntentRequest::GetMetadata() const {
  protobuf_intent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntentResponse::kIdFieldNumber;
const int IntentResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntentResponse::IntentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intent_2eproto::scc_info_IntentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intent.IntentResponse)
}
IntentResponse::IntentResponse(const IntentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:intent.IntentResponse)
}

void IntentResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

IntentResponse::~IntentResponse() {
  // @@protoc_insertion_point(destructor:intent.IntentResponse)
  SharedDtor();
}

void IntentResponse::SharedDtor() {
}

void IntentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntentResponse::descriptor() {
  ::protobuf_intent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntentResponse& IntentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intent_2eproto::scc_info_IntentResponse.base);
  return *internal_default_instance();
}


void IntentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:intent.IntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool IntentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intent.IntentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intent.IntentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intent.IntentResponse)
  return false;
#undef DO_
}

void IntentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intent.IntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intent.IntentResponse)
}

::google::protobuf::uint8* IntentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intent.IntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intent.IntentResponse)
  return target;
}

size_t IntentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intent.IntentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intent.IntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intent.IntentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intent.IntentResponse)
    MergeFrom(*source);
  }
}

void IntentResponse::MergeFrom(const IntentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intent.IntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void IntentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intent.IntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentResponse::CopyFrom(const IntentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intent.IntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentResponse::IsInitialized() const {
  return true;
}

void IntentResponse::Swap(IntentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntentResponse::InternalSwap(IntentResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntentResponse::GetMetadata() const {
  protobuf_intent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace intent
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intent::IntentRequest* Arena::CreateMaybeMessage< ::intent::IntentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::intent::IntentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intent::IntentResponse* Arena::CreateMaybeMessage< ::intent::IntentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::intent::IntentResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
